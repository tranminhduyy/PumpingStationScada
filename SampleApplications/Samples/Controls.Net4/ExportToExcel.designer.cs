#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Opc.Ua.Sample
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PumpStation")]
	public partial class ExportToExcelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDAILY(DAILY instance);
    partial void UpdateDAILY(DAILY instance);
    partial void DeleteDAILY(DAILY instance);
    #endregion
		
		public ExportToExcelDataContext() : 
				base(global::Opc.Ua.Sample.Properties.Settings.Default.PumpStationConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ExportToExcelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExportToExcelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExportToExcelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExportToExcelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DAILY> DAILies
		{
			get
			{
				return this.GetTable<DAILY>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DAILY")]
	public partial class DAILY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _DATE;
		
		private string _TIME;
		
		private string _PUMP_1_RUNFEEDBACK;
		
		private System.Nullable<int> _PUMP_1_FAULTID;
		
		private string _PUMP_2_RUNFEEDBACK;
		
		private System.Nullable<int> _PUMP_2_FAULTID;
		
		private string _PUMP_3_RUNFEEDBACK;
		
		private System.Nullable<int> _PUMP_3_FAULTID;
		
		private string _PUMP_4_RUNFEEDBACK;
		
		private System.Nullable<int> _PUMP_4_FAULTID;
		
		private string _RAKER_1_RUNFEEDBACK;
		
		private System.Nullable<int> _RAKER_1_FAULTID;
		
		private string _RAKER_2_RUNFEEDBACK;
		
		private System.Nullable<int> _RAKER_2_FAULTID;
		
		private string _RAKER_3_RUNFEEDBACK;
		
		private System.Nullable<int> _RAKER_3_FAULTID;
		
		private string _RAKER_4_RUNFEEDBACK;
		
		private System.Nullable<int> _RAKER_4_FAULTID;
		
		private string _CONVEYER_RUNFEEDBACK;
		
		private System.Nullable<int> _CONVEYER_FAULTID;
		
		private System.Nullable<int> _GLOBALMODE;
		
		private System.Nullable<double> _TEMPERATURE;
		
		private System.Nullable<double> _HUMIDITY;
		
		private System.Nullable<double> _LEVELINSUCTIONTANK_FILTERED;
		
		private string _EMPTYSUCTIONTANK;
		
		private System.Nullable<double> _ABOVE_LEVEL;
		
		private System.Nullable<double> _BOTTOM_LEVEL;
		
		private System.Nullable<int> _TIMELIMIT;
		
		private System.Nullable<int> _MASTERCHANGEFREQUENCY;
		
		private System.Nullable<int> _RAKERRUNDELAY;
		
		private System.Nullable<int> _PUMPRUNDELAY;
		
		private System.Nullable<int> _CONVEYERSTOPDELAY;
		
		private System.Nullable<int> _RAKERSTOPDELAY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEChanged();
    partial void OnTIMEChanging(string value);
    partial void OnTIMEChanged();
    partial void OnPUMP_1_RUNFEEDBACKChanging(string value);
    partial void OnPUMP_1_RUNFEEDBACKChanged();
    partial void OnPUMP_1_FAULTIDChanging(System.Nullable<int> value);
    partial void OnPUMP_1_FAULTIDChanged();
    partial void OnPUMP_2_RUNFEEDBACKChanging(string value);
    partial void OnPUMP_2_RUNFEEDBACKChanged();
    partial void OnPUMP_2_FAULTIDChanging(System.Nullable<int> value);
    partial void OnPUMP_2_FAULTIDChanged();
    partial void OnPUMP_3_RUNFEEDBACKChanging(string value);
    partial void OnPUMP_3_RUNFEEDBACKChanged();
    partial void OnPUMP_3_FAULTIDChanging(System.Nullable<int> value);
    partial void OnPUMP_3_FAULTIDChanged();
    partial void OnPUMP_4_RUNFEEDBACKChanging(string value);
    partial void OnPUMP_4_RUNFEEDBACKChanged();
    partial void OnPUMP_4_FAULTIDChanging(System.Nullable<int> value);
    partial void OnPUMP_4_FAULTIDChanged();
    partial void OnRAKER_1_RUNFEEDBACKChanging(string value);
    partial void OnRAKER_1_RUNFEEDBACKChanged();
    partial void OnRAKER_1_FAULTIDChanging(System.Nullable<int> value);
    partial void OnRAKER_1_FAULTIDChanged();
    partial void OnRAKER_2_RUNFEEDBACKChanging(string value);
    partial void OnRAKER_2_RUNFEEDBACKChanged();
    partial void OnRAKER_2_FAULTIDChanging(System.Nullable<int> value);
    partial void OnRAKER_2_FAULTIDChanged();
    partial void OnRAKER_3_RUNFEEDBACKChanging(string value);
    partial void OnRAKER_3_RUNFEEDBACKChanged();
    partial void OnRAKER_3_FAULTIDChanging(System.Nullable<int> value);
    partial void OnRAKER_3_FAULTIDChanged();
    partial void OnRAKER_4_RUNFEEDBACKChanging(string value);
    partial void OnRAKER_4_RUNFEEDBACKChanged();
    partial void OnRAKER_4_FAULTIDChanging(System.Nullable<int> value);
    partial void OnRAKER_4_FAULTIDChanged();
    partial void OnCONVEYER_RUNFEEDBACKChanging(string value);
    partial void OnCONVEYER_RUNFEEDBACKChanged();
    partial void OnCONVEYER_FAULTIDChanging(System.Nullable<int> value);
    partial void OnCONVEYER_FAULTIDChanged();
    partial void OnGLOBALMODEChanging(System.Nullable<int> value);
    partial void OnGLOBALMODEChanged();
    partial void OnTEMPERATUREChanging(System.Nullable<double> value);
    partial void OnTEMPERATUREChanged();
    partial void OnHUMIDITYChanging(System.Nullable<double> value);
    partial void OnHUMIDITYChanged();
    partial void OnLEVELINSUCTIONTANK_FILTEREDChanging(System.Nullable<double> value);
    partial void OnLEVELINSUCTIONTANK_FILTEREDChanged();
    partial void OnEMPTYSUCTIONTANKChanging(string value);
    partial void OnEMPTYSUCTIONTANKChanged();
    partial void OnABOVE_LEVELChanging(System.Nullable<double> value);
    partial void OnABOVE_LEVELChanged();
    partial void OnBOTTOM_LEVELChanging(System.Nullable<double> value);
    partial void OnBOTTOM_LEVELChanged();
    partial void OnTIMELIMITChanging(System.Nullable<int> value);
    partial void OnTIMELIMITChanged();
    partial void OnMASTERCHANGEFREQUENCYChanging(System.Nullable<int> value);
    partial void OnMASTERCHANGEFREQUENCYChanged();
    partial void OnRAKERRUNDELAYChanging(System.Nullable<int> value);
    partial void OnRAKERRUNDELAYChanged();
    partial void OnPUMPRUNDELAYChanging(System.Nullable<int> value);
    partial void OnPUMPRUNDELAYChanged();
    partial void OnCONVEYERSTOPDELAYChanging(System.Nullable<int> value);
    partial void OnCONVEYERSTOPDELAYChanged();
    partial void OnRAKERSTOPDELAYChanging(System.Nullable<int> value);
    partial void OnRAKERSTOPDELAYChanged();
    #endregion
		
		public DAILY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIME", DbType="NChar(20)")]
		public string TIME
		{
			get
			{
				return this._TIME;
			}
			set
			{
				if ((this._TIME != value))
				{
					this.OnTIMEChanging(value);
					this.SendPropertyChanging();
					this._TIME = value;
					this.SendPropertyChanged("TIME");
					this.OnTIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUMP_1_RUNFEEDBACK", DbType="NChar(5)")]
		public string PUMP_1_RUNFEEDBACK
		{
			get
			{
				return this._PUMP_1_RUNFEEDBACK;
			}
			set
			{
				if ((this._PUMP_1_RUNFEEDBACK != value))
				{
					this.OnPUMP_1_RUNFEEDBACKChanging(value);
					this.SendPropertyChanging();
					this._PUMP_1_RUNFEEDBACK = value;
					this.SendPropertyChanged("PUMP_1_RUNFEEDBACK");
					this.OnPUMP_1_RUNFEEDBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUMP_1_FAULTID", DbType="Int")]
		public System.Nullable<int> PUMP_1_FAULTID
		{
			get
			{
				return this._PUMP_1_FAULTID;
			}
			set
			{
				if ((this._PUMP_1_FAULTID != value))
				{
					this.OnPUMP_1_FAULTIDChanging(value);
					this.SendPropertyChanging();
					this._PUMP_1_FAULTID = value;
					this.SendPropertyChanged("PUMP_1_FAULTID");
					this.OnPUMP_1_FAULTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUMP_2_RUNFEEDBACK", DbType="NChar(5)")]
		public string PUMP_2_RUNFEEDBACK
		{
			get
			{
				return this._PUMP_2_RUNFEEDBACK;
			}
			set
			{
				if ((this._PUMP_2_RUNFEEDBACK != value))
				{
					this.OnPUMP_2_RUNFEEDBACKChanging(value);
					this.SendPropertyChanging();
					this._PUMP_2_RUNFEEDBACK = value;
					this.SendPropertyChanged("PUMP_2_RUNFEEDBACK");
					this.OnPUMP_2_RUNFEEDBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUMP_2_FAULTID", DbType="Int")]
		public System.Nullable<int> PUMP_2_FAULTID
		{
			get
			{
				return this._PUMP_2_FAULTID;
			}
			set
			{
				if ((this._PUMP_2_FAULTID != value))
				{
					this.OnPUMP_2_FAULTIDChanging(value);
					this.SendPropertyChanging();
					this._PUMP_2_FAULTID = value;
					this.SendPropertyChanged("PUMP_2_FAULTID");
					this.OnPUMP_2_FAULTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUMP_3_RUNFEEDBACK", DbType="NChar(5)")]
		public string PUMP_3_RUNFEEDBACK
		{
			get
			{
				return this._PUMP_3_RUNFEEDBACK;
			}
			set
			{
				if ((this._PUMP_3_RUNFEEDBACK != value))
				{
					this.OnPUMP_3_RUNFEEDBACKChanging(value);
					this.SendPropertyChanging();
					this._PUMP_3_RUNFEEDBACK = value;
					this.SendPropertyChanged("PUMP_3_RUNFEEDBACK");
					this.OnPUMP_3_RUNFEEDBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUMP_3_FAULTID", DbType="Int")]
		public System.Nullable<int> PUMP_3_FAULTID
		{
			get
			{
				return this._PUMP_3_FAULTID;
			}
			set
			{
				if ((this._PUMP_3_FAULTID != value))
				{
					this.OnPUMP_3_FAULTIDChanging(value);
					this.SendPropertyChanging();
					this._PUMP_3_FAULTID = value;
					this.SendPropertyChanged("PUMP_3_FAULTID");
					this.OnPUMP_3_FAULTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUMP_4_RUNFEEDBACK", DbType="NChar(5)")]
		public string PUMP_4_RUNFEEDBACK
		{
			get
			{
				return this._PUMP_4_RUNFEEDBACK;
			}
			set
			{
				if ((this._PUMP_4_RUNFEEDBACK != value))
				{
					this.OnPUMP_4_RUNFEEDBACKChanging(value);
					this.SendPropertyChanging();
					this._PUMP_4_RUNFEEDBACK = value;
					this.SendPropertyChanged("PUMP_4_RUNFEEDBACK");
					this.OnPUMP_4_RUNFEEDBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUMP_4_FAULTID", DbType="Int")]
		public System.Nullable<int> PUMP_4_FAULTID
		{
			get
			{
				return this._PUMP_4_FAULTID;
			}
			set
			{
				if ((this._PUMP_4_FAULTID != value))
				{
					this.OnPUMP_4_FAULTIDChanging(value);
					this.SendPropertyChanging();
					this._PUMP_4_FAULTID = value;
					this.SendPropertyChanged("PUMP_4_FAULTID");
					this.OnPUMP_4_FAULTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAKER_1_RUNFEEDBACK", DbType="NChar(5)")]
		public string RAKER_1_RUNFEEDBACK
		{
			get
			{
				return this._RAKER_1_RUNFEEDBACK;
			}
			set
			{
				if ((this._RAKER_1_RUNFEEDBACK != value))
				{
					this.OnRAKER_1_RUNFEEDBACKChanging(value);
					this.SendPropertyChanging();
					this._RAKER_1_RUNFEEDBACK = value;
					this.SendPropertyChanged("RAKER_1_RUNFEEDBACK");
					this.OnRAKER_1_RUNFEEDBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAKER_1_FAULTID", DbType="Int")]
		public System.Nullable<int> RAKER_1_FAULTID
		{
			get
			{
				return this._RAKER_1_FAULTID;
			}
			set
			{
				if ((this._RAKER_1_FAULTID != value))
				{
					this.OnRAKER_1_FAULTIDChanging(value);
					this.SendPropertyChanging();
					this._RAKER_1_FAULTID = value;
					this.SendPropertyChanged("RAKER_1_FAULTID");
					this.OnRAKER_1_FAULTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAKER_2_RUNFEEDBACK", DbType="NChar(5)")]
		public string RAKER_2_RUNFEEDBACK
		{
			get
			{
				return this._RAKER_2_RUNFEEDBACK;
			}
			set
			{
				if ((this._RAKER_2_RUNFEEDBACK != value))
				{
					this.OnRAKER_2_RUNFEEDBACKChanging(value);
					this.SendPropertyChanging();
					this._RAKER_2_RUNFEEDBACK = value;
					this.SendPropertyChanged("RAKER_2_RUNFEEDBACK");
					this.OnRAKER_2_RUNFEEDBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAKER_2_FAULTID", DbType="Int")]
		public System.Nullable<int> RAKER_2_FAULTID
		{
			get
			{
				return this._RAKER_2_FAULTID;
			}
			set
			{
				if ((this._RAKER_2_FAULTID != value))
				{
					this.OnRAKER_2_FAULTIDChanging(value);
					this.SendPropertyChanging();
					this._RAKER_2_FAULTID = value;
					this.SendPropertyChanged("RAKER_2_FAULTID");
					this.OnRAKER_2_FAULTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAKER_3_RUNFEEDBACK", DbType="NChar(5)")]
		public string RAKER_3_RUNFEEDBACK
		{
			get
			{
				return this._RAKER_3_RUNFEEDBACK;
			}
			set
			{
				if ((this._RAKER_3_RUNFEEDBACK != value))
				{
					this.OnRAKER_3_RUNFEEDBACKChanging(value);
					this.SendPropertyChanging();
					this._RAKER_3_RUNFEEDBACK = value;
					this.SendPropertyChanged("RAKER_3_RUNFEEDBACK");
					this.OnRAKER_3_RUNFEEDBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAKER_3_FAULTID", DbType="Int")]
		public System.Nullable<int> RAKER_3_FAULTID
		{
			get
			{
				return this._RAKER_3_FAULTID;
			}
			set
			{
				if ((this._RAKER_3_FAULTID != value))
				{
					this.OnRAKER_3_FAULTIDChanging(value);
					this.SendPropertyChanging();
					this._RAKER_3_FAULTID = value;
					this.SendPropertyChanged("RAKER_3_FAULTID");
					this.OnRAKER_3_FAULTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAKER_4_RUNFEEDBACK", DbType="NChar(5)")]
		public string RAKER_4_RUNFEEDBACK
		{
			get
			{
				return this._RAKER_4_RUNFEEDBACK;
			}
			set
			{
				if ((this._RAKER_4_RUNFEEDBACK != value))
				{
					this.OnRAKER_4_RUNFEEDBACKChanging(value);
					this.SendPropertyChanging();
					this._RAKER_4_RUNFEEDBACK = value;
					this.SendPropertyChanged("RAKER_4_RUNFEEDBACK");
					this.OnRAKER_4_RUNFEEDBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAKER_4_FAULTID", DbType="Int")]
		public System.Nullable<int> RAKER_4_FAULTID
		{
			get
			{
				return this._RAKER_4_FAULTID;
			}
			set
			{
				if ((this._RAKER_4_FAULTID != value))
				{
					this.OnRAKER_4_FAULTIDChanging(value);
					this.SendPropertyChanging();
					this._RAKER_4_FAULTID = value;
					this.SendPropertyChanged("RAKER_4_FAULTID");
					this.OnRAKER_4_FAULTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONVEYER_RUNFEEDBACK", DbType="NChar(5)")]
		public string CONVEYER_RUNFEEDBACK
		{
			get
			{
				return this._CONVEYER_RUNFEEDBACK;
			}
			set
			{
				if ((this._CONVEYER_RUNFEEDBACK != value))
				{
					this.OnCONVEYER_RUNFEEDBACKChanging(value);
					this.SendPropertyChanging();
					this._CONVEYER_RUNFEEDBACK = value;
					this.SendPropertyChanged("CONVEYER_RUNFEEDBACK");
					this.OnCONVEYER_RUNFEEDBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONVEYER_FAULTID", DbType="Int")]
		public System.Nullable<int> CONVEYER_FAULTID
		{
			get
			{
				return this._CONVEYER_FAULTID;
			}
			set
			{
				if ((this._CONVEYER_FAULTID != value))
				{
					this.OnCONVEYER_FAULTIDChanging(value);
					this.SendPropertyChanging();
					this._CONVEYER_FAULTID = value;
					this.SendPropertyChanged("CONVEYER_FAULTID");
					this.OnCONVEYER_FAULTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GLOBALMODE", DbType="Int")]
		public System.Nullable<int> GLOBALMODE
		{
			get
			{
				return this._GLOBALMODE;
			}
			set
			{
				if ((this._GLOBALMODE != value))
				{
					this.OnGLOBALMODEChanging(value);
					this.SendPropertyChanging();
					this._GLOBALMODE = value;
					this.SendPropertyChanged("GLOBALMODE");
					this.OnGLOBALMODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPERATURE", DbType="Float")]
		public System.Nullable<double> TEMPERATURE
		{
			get
			{
				return this._TEMPERATURE;
			}
			set
			{
				if ((this._TEMPERATURE != value))
				{
					this.OnTEMPERATUREChanging(value);
					this.SendPropertyChanging();
					this._TEMPERATURE = value;
					this.SendPropertyChanged("TEMPERATURE");
					this.OnTEMPERATUREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HUMIDITY", DbType="Float")]
		public System.Nullable<double> HUMIDITY
		{
			get
			{
				return this._HUMIDITY;
			}
			set
			{
				if ((this._HUMIDITY != value))
				{
					this.OnHUMIDITYChanging(value);
					this.SendPropertyChanging();
					this._HUMIDITY = value;
					this.SendPropertyChanged("HUMIDITY");
					this.OnHUMIDITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEVELINSUCTIONTANK_FILTERED", DbType="Float")]
		public System.Nullable<double> LEVELINSUCTIONTANK_FILTERED
		{
			get
			{
				return this._LEVELINSUCTIONTANK_FILTERED;
			}
			set
			{
				if ((this._LEVELINSUCTIONTANK_FILTERED != value))
				{
					this.OnLEVELINSUCTIONTANK_FILTEREDChanging(value);
					this.SendPropertyChanging();
					this._LEVELINSUCTIONTANK_FILTERED = value;
					this.SendPropertyChanged("LEVELINSUCTIONTANK_FILTERED");
					this.OnLEVELINSUCTIONTANK_FILTEREDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPTYSUCTIONTANK", DbType="NChar(5)")]
		public string EMPTYSUCTIONTANK
		{
			get
			{
				return this._EMPTYSUCTIONTANK;
			}
			set
			{
				if ((this._EMPTYSUCTIONTANK != value))
				{
					this.OnEMPTYSUCTIONTANKChanging(value);
					this.SendPropertyChanging();
					this._EMPTYSUCTIONTANK = value;
					this.SendPropertyChanged("EMPTYSUCTIONTANK");
					this.OnEMPTYSUCTIONTANKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABOVE_LEVEL", DbType="Float")]
		public System.Nullable<double> ABOVE_LEVEL
		{
			get
			{
				return this._ABOVE_LEVEL;
			}
			set
			{
				if ((this._ABOVE_LEVEL != value))
				{
					this.OnABOVE_LEVELChanging(value);
					this.SendPropertyChanging();
					this._ABOVE_LEVEL = value;
					this.SendPropertyChanged("ABOVE_LEVEL");
					this.OnABOVE_LEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOTTOM_LEVEL", DbType="Float")]
		public System.Nullable<double> BOTTOM_LEVEL
		{
			get
			{
				return this._BOTTOM_LEVEL;
			}
			set
			{
				if ((this._BOTTOM_LEVEL != value))
				{
					this.OnBOTTOM_LEVELChanging(value);
					this.SendPropertyChanging();
					this._BOTTOM_LEVEL = value;
					this.SendPropertyChanged("BOTTOM_LEVEL");
					this.OnBOTTOM_LEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIMELIMIT", DbType="Int")]
		public System.Nullable<int> TIMELIMIT
		{
			get
			{
				return this._TIMELIMIT;
			}
			set
			{
				if ((this._TIMELIMIT != value))
				{
					this.OnTIMELIMITChanging(value);
					this.SendPropertyChanging();
					this._TIMELIMIT = value;
					this.SendPropertyChanged("TIMELIMIT");
					this.OnTIMELIMITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASTERCHANGEFREQUENCY", DbType="Int")]
		public System.Nullable<int> MASTERCHANGEFREQUENCY
		{
			get
			{
				return this._MASTERCHANGEFREQUENCY;
			}
			set
			{
				if ((this._MASTERCHANGEFREQUENCY != value))
				{
					this.OnMASTERCHANGEFREQUENCYChanging(value);
					this.SendPropertyChanging();
					this._MASTERCHANGEFREQUENCY = value;
					this.SendPropertyChanged("MASTERCHANGEFREQUENCY");
					this.OnMASTERCHANGEFREQUENCYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAKERRUNDELAY", DbType="Int")]
		public System.Nullable<int> RAKERRUNDELAY
		{
			get
			{
				return this._RAKERRUNDELAY;
			}
			set
			{
				if ((this._RAKERRUNDELAY != value))
				{
					this.OnRAKERRUNDELAYChanging(value);
					this.SendPropertyChanging();
					this._RAKERRUNDELAY = value;
					this.SendPropertyChanged("RAKERRUNDELAY");
					this.OnRAKERRUNDELAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUMPRUNDELAY", DbType="Int")]
		public System.Nullable<int> PUMPRUNDELAY
		{
			get
			{
				return this._PUMPRUNDELAY;
			}
			set
			{
				if ((this._PUMPRUNDELAY != value))
				{
					this.OnPUMPRUNDELAYChanging(value);
					this.SendPropertyChanging();
					this._PUMPRUNDELAY = value;
					this.SendPropertyChanged("PUMPRUNDELAY");
					this.OnPUMPRUNDELAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONVEYERSTOPDELAY", DbType="Int")]
		public System.Nullable<int> CONVEYERSTOPDELAY
		{
			get
			{
				return this._CONVEYERSTOPDELAY;
			}
			set
			{
				if ((this._CONVEYERSTOPDELAY != value))
				{
					this.OnCONVEYERSTOPDELAYChanging(value);
					this.SendPropertyChanging();
					this._CONVEYERSTOPDELAY = value;
					this.SendPropertyChanged("CONVEYERSTOPDELAY");
					this.OnCONVEYERSTOPDELAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAKERSTOPDELAY", DbType="Int")]
		public System.Nullable<int> RAKERSTOPDELAY
		{
			get
			{
				return this._RAKERSTOPDELAY;
			}
			set
			{
				if ((this._RAKERSTOPDELAY != value))
				{
					this.OnRAKERSTOPDELAYChanging(value);
					this.SendPropertyChanging();
					this._RAKERSTOPDELAY = value;
					this.SendPropertyChanged("RAKERSTOPDELAY");
					this.OnRAKERSTOPDELAYChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
